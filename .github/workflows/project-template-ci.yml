name: project_template CI

on: [push, pull_request]

jobs:
  build:
    name: ${{ matrix.os }}-${{ matrix.build_type }}-${{ matrix.toolchain }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        build_type: [Debug, Release]
        toolchain: [gcc_libstdcxx, clang_libstdcxx, clang_libcxx]
        clang_tidy: [On]
        clang_tidy_path: [/usr/bin/clang-tidy]
        llvm_version: [17]
    steps:
      - name: Install tools
        id: install_tools
        run: |
          sudo wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key|sudo apt-key add -
          sudo apt-add-repository 'deb http://apt.llvm.org/jammy/ llvm-toolchain-jammy main'
          sudo apt-get update
          sudo apt-get remove -y .*clang.* .*llvm.*
          sudo apt-get autoremove -y
          sudo apt-get install -y                          \
            clang                                          \
            clang-format                                   \
            clang-tidy                                     \
            clang-tools                                    \
            g++-11                                         \
            gcc-11                                         \
            libc++-${{ matrix.llvm_version }}-dev          \
            libc++abi-${{ matrix.llvm_version }}-dev       \
            libclang-${{ matrix.llvm_version }}-dev        \
            libclang-common-${{ matrix.llvm_version }}-dev \
            libfuzzer-${{ matrix.llvm_version }}-dev       \
            libunwind-${{ matrix.llvm_version }}-dev       \
            lld                                            \
            llvm-dev                                       \
            ninja-build                                    \
            python3                                        \
            python3-pip                                    \
            python3-clang
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-11 100
          sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-11 100
          python3 -m pip install pip --upgrade
          python3 -m pip install cmake --user
          clang --version

      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Formatting
        id: git_clang_format
        run: git-clang-format
          --style=file
          --extensions c,cc,cpp,cxx,h,hh,hpp,hxx
          --diff origin/main HEAD

      - name: Install external libraries
        id: install_vcpkg
        run: |
          git clone https://github.com/Microsoft/vcpkg.git
          cp config/vcpkg/${{ matrix.toolchain }}.cmake vcpkg/triplets/community/.
          cd vcpkg
          ./bootstrap-vcpkg.sh -disableMetrics -useSystemBinaries

      - name: Configure
        id: configure
        run: |
          export ENABLE_CLANG_TIDY=On
          if [[ ${{ matrix.toolchain }} == "gcc_libstdcxx" && ${{ matrix.build_type }} == "Release" ]]; then
            export ENABLE_CLANG_TIDY=Off
          fi
          cmake . -G Ninja                                                                               \
            -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}                                                  \
            -DCMAKE_TOOLCHAIN_FILE=`pwd`/vcpkg/scripts/buildsystems/vcpkg.cmake                          \
            -DVCPKG_CHAINLOAD_TOOLCHAIN_FILE=`pwd`/config/cmake/toolchains/${{ matrix.toolchain }}.cmake \
            -DVCPKG_TARGET_TRIPLET=${{ matrix.toolchain }}                                               \
            -DBUGGY_ENABLE_CLANG_TIDY=${ENABLE_CLANG_TIDY}                                      \
            -DBUGGY_CLANG_TIDY_PATH=${{ matrix.clang_tidy_path }}

      - name: Build
        id: build
        run: ninja

      - name: Test
        id: test
        run: ctest -j$(nproc) --output-on-failure
